/***********************************************************/
/*                                                         */
/* fit finite VAR model to the simulated DGP from the true */
/* RBC model (200 observations), generate impulse response */
/* functions over 10000 replications and plot the interval */
/*                                                         */
/***********************************************************/
/*                              --- written by Wenying Yao */
/***********************************************************/
new;
cls;

library pgraph;
graphset;

load obsv[200,2]=F:\\aaa\\RBC_model\\simulation.txt;
sigmad=0.024;           // s.e. of edt
sigmaz=0.0148;          // s.e. of ezt
nobs=rows(obsv);
nv=cols(obsv);



/*************** fit 2-variable VAR and get impulse responses ***************/
// VAR(lag) specification
lag=4;      // choose lag length via AIC criteria
tp=300;
{ bVAR, resVAR, vcvVAR }=var_coe(obsv,lag);	// estimate VAR
{ comp } = companion(bVAR,lag);             	// companion matrix
{ irf } = response(vcvVAR,lag,comp,tp);     	// impulse responses via cholesky decomposition
// print irf;
// first two columns: responses of both variables to first shock



/****** find the transformation matrix from ut to structural shocks et ******/
csk=chol(vcvVAR)';      // vt = csk * ut , ut has identity vcv matrix
/* csk:
     0.034793225       0.00000000 
     0.045429794      0.013184041 */

// restriction: long-run neutrality --- edt has no long-run effect on output
f11=sumc(irf[.,1]);
f12=sumc(irf[.,3]);

// long-run restriction:  f11*a12 + f12*a22 = 0
theta=-f12/f11;
print theta;        // a12 = theta * a22        theta = 2.0485899

// second restriction: ezt and edt are uncorrelated
// third restriction: variance of ezt and edt
vz=sigmaz^2;
vd=sigmad^2;
// solve for a11^2 first
sqa11=1/(vz*(1+theta^2));
a11_1=sqrt(sqa11);
a11_2=-a11_1;
// then a12^2
sqa12=(1-vz*sqa11)/vd;
a12_1=-sqrt(sqa12);
a12_2=-a12_1;
// a21
a21_1=-theta*a11_1;
a21_2=-theta*a11_2;
// a22
a22_1=a12_1/theta;
a22_2=a12_2/theta;
tsf1=csk*((a11_1~a12_1)|(a21_1~a22_1));
tsf2=csk*((a11_2~a12_2)|(a21_2~a22_2));

print tsf1;
//       1.0312603       -1.3027881 
//      0.54599567       -1.9420363 

// print tsf2;
// impulse responses of ( DlnYt nt )' to structural shocks ( ezt edt )'
// first two columns: responses of both variables to first shock

tp0=100;
{ s_irf } = s_response(vcvVAR,lag,comp,tp0,tsf1);



/*************** confidence interval of impulse response ***************/
nsim=10000;
nzci=zeros(tp0+1,nsim);
ndci=zeros(tp0+1,nsim);
yzci=zeros(tp0+1,nsim);
ydci=zeros(tp0+1,nsim);

i=1; do while i<=nsim;
    seed=i;
    rndseed(seed);
    disz=sigmaz*rndn(rows(resVAR),1);
    disd=sigmad*rndn(rows(resVAR),1);
    dis=(disz~disd)*tsf1';      // new error terms
    { yrdm }=pseudo(obsv,lag,bVAR,dis);
    { brdm, resrdm, vcvrdm }=var_coe(yrdm,lag);
    { comprdm } = companion(brdm,lag);
    { s_irfrdm } = s_response(vcvrdm,lag,comprdm,tp0,tsf1);
    yzci[.,i]=s_irfrdm[.,1];
    nzci[.,i]=s_irfrdm[.,2];
    ydci[.,i]=s_irfrdm[.,3];
    ndci[.,i]=s_irfrdm[.,4];
i=i+1; endo;

{ nzrsp }=interval(nzci);
{ ndrsp }=interval(ndci);

//{ yzrsp0 }=interval(yzci);
//{ ydrsp0 }=interval(ydci);
// print nzrsp~ndrsp~yzrsp0~ydrsp0;



/*************** plot the impulse response functions ***************/
h0=seqa(0,1,tp0+1);
n_z=sumc(nzci')/nsim;  // s_irf[1:rows(h0),2];
n_d=sumc(ndci')/nsim;  // s_irf[1:rows(h0),4];

// cumulative effect on lnYt
yzrsp0=zeros(tp0+1,nsim);
ydrsp0=zeros(tp0+1,nsim);
i=1; do while i<=rows(yzrsp0);
    yzrsp0[i,.]=sumc(yzci[1:i,.])';
    ydrsp0[i,.]=sumc(ydci[1:i,.])';
i=i+1; endo;

{ yzrsp }=interval(yzrsp0);
{ ydrsp }=interval(ydrsp0);
y_z=sumc(yzrsp0')/nsim;
y_d=sumc(ydrsp0')/nsim;

/*
print Y_z~Y_d~N_z~N_d;
print "confidence interval of nt to a technology shock";
nzrsp~n_z;
print;
print;
print;
print "confidence interval of nt to a labor supply shock";
ndrsp~n_d;
print;
print;
print;
print "confidence interval of lnYt to a technology shock";
yzrsp~y_z;
print;
print;
print;
print "confidence interval of lnYt to a labor supply shock";
ydrsp~y_d;
*/

begwind;
window(2,2,0);
xsize=20;
ysize=20;
makewind(xsize,ysize,xsize/2,ysize/2,0);

_pcolor={12,12,9};
_pltype={4,4,6};
_plwidth={6,6,6};
_pmcolor={0,0,0,0,0,0,15,15,15};
_pcross=1;
_pnum=2;

setwind(1);
    title("response of lnYt to technology shock");
    xy(h0,yzrsp~Y_z);
nextwind;
    title("response of nt to technology shock");
    xy(h0,nzrsp~n_z);
nextwind;
    title("response of lnYt to labor supply shock");
    xy(h0,ydrsp~Y_d);
nextwind;
    title("response of nt to labor supply shock");
    xy(h0,ndrsp~n_d);
endwind;



proc interval(rdmci);
    local rspd0,rspd1,rspd2,j,rspd3,cv,rspd4,lb,ub,rspd;
rspd0=rdmci';
rspd1=delif(rspd0,(rspd0[.,2].==0).and(rspd0[.,3].==0));
rspd2=zeros(rows(rspd1),cols(rspd1));
for j(1,cols(rspd1),1);
    rspd3=sortc(rspd1,j);
    rspd2[.,j]=rspd3[.,j];
endfor;
cv=round(rows(rspd2)*0.025);
rspd4=trimr(rspd2,cv,cv);
lb=rspd4[1,.]';
ub=rspd4[rows(rspd4),.]';
rspd=lb~ub;
    retp (rspd);
endp;


proc pseudo(data,lag,b,res);
    local nv,nobs,i,j,y;
nv=cols(data);
nobs=rows(data);
y=data[1:lag,.]|res;
i=lag+1; do while i<=nobs;
    y[i,.]=y[i,.]+b[1,.];
    j=1; do while j<=lag;
        y[i,.]=y[i,.]+y[i-j,.]*b[nv*(j-1)+2:nv*j+1,.];
    j=j+1; endo;
i=i+1; endo;
    retp (y);
endp;


proc s_response(vcv,lag,a,length,tsf);
    local nv,ut,resps,subresps,compes,i,j,irp;
nv = cols(vcv);
ut = tsf;
resps = zeros(lag*nv,length+1);
subresps = zeros(nv,length+1);
i=1; do while i <= nv;
    compes = zeros(lag*nv,1);
    compes[1:nv] = ut[.,i];
    resps[.,1] = compes;
    j=1; do while j <= length;
        resps[.,j+1] = a*resps[.,j];
    j=j+1; endo;
    subresps = resps[1:nv,.];        
    if i == 1;
        irp = subresps;
    else;
        irp = irp|subresps;
    endif;
i=i+1; endo;
    retp(irp');
endp;


proc response(vcv,lag,a,length);
    local nv,ut,resps,subresps,compes,i,j,irp;
nv = cols(vcv);
ut = chol(vcvVAR)';
resps = zeros(lag*nv,length+1);
subresps = zeros(nv,length+1);
i=1; do while i <= nv;
    compes = zeros(lag*nv,1);
    compes[1:nv] = ut[.,i];
    resps[.,1] = compes;
    j=1; do while j <= length;
        resps[.,j+1] = a*resps[.,j];
    j=j+1; endo;
    subresps = resps[1:nv,.];        
    if i == 1;
        irp = subresps;
    else;
        irp = irp|subresps;
    endif;
i=i+1; endo;
    retp(irp');
endp;


proc companion(b,lag);
    local nv,bb,dim,a1,a2,a;
nv=cols(b);
bb = trimr(b,1,0);
dim = rows(bb);
if lag==1;
    a=bb;
else;
    a1 = eye(nv*(lag-1));
    a2 = zeros(nv,nv*(lag-1));
    a = (bb~(a1|a2))';
endif;
    retp(a);
endp;


proc (3)=var_coe(data,lag);
    local nv,nobs,dof,y,x,i,b,res,vcv;
nv=cols(data);
nobs=rows(data)-lag;
dof=nobs-nv*lag-1;
y=trimr(data,lag,0);
x=ones(nobs,1);
i=1; do while i<=lag;
    x=x~trimr(data,lag-i,i);
i=i+1; endo;
b=inv(x'x)*(x'y);
res=y-x*b;
vcv=(1/dof)*(res'res);
    retp(b,res,vcv);
endp;
