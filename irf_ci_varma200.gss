/***********************************************************/
/*                                                         */
/* fit VARMA(1,1) model to the simulated DGP from the true */
/* RBC model (200 observations), generate impulse response */
/* functions over 10000 replications and plot the interval */
/*                                                         */
/***********************************************************/
/*                              --- written by Wenying Yao */
/***********************************************************/
new;
cls;

library maxlik, pgraph;
#include maxlik.ext;
maxset;
// _max_covpar=2;
// _max_LineSearch=4;
_max_GradTol=1e-7;
// _max_Algorithm=3;

load data[200,2]=G:\\aaa\\RBC_model\\simulation.txt;
obsv=rev(data')';
sigmad=0.024;           // s.e. of edt
sigmaz=0.0148;          // s.e. of ezt

/*************** fit VARMA to the simulated data ***************/
//******** overall a VARMA(1,1) model
ARorder=1;
MAorder=1;

nobs=rows(obsv);
nv=cols(obsv);

maxlag=maxc(ARorder|MAorder);
yy=trimr(obsv,ARorder,0);

if ARorder==1;
    xx=trimr(obsv,ARorder-1,1);
else;
    xx=trimr(obsv,ARorder-1,1);
    i=2; do while i<=ARorder;
        xx=xx~trimr(obsv,ARorder-i,i);
    i=i+1; endo;
endif;

yy=yy-meanc(yy)';           // mean adjusted series
xx=xx-meanc(xx)';

Ry0=zeros(nv,nv);
Ry0[2,1]=0.081847674;

A0=eye(nv)+Ry0;
AR={ 0.81677027  -0.85202436 , 0 0};
MA=zeros(nv,nv);
MA[1,1]=0.61318882;

Restr=ar~ma;

// maximum logliklihood estimation
Rcoe=Ry0~Restr;
coe =Rcoe;
RR0=returnR0(Rcoe,Rcoe);
{RR1,f,g,cov,ret}=maxlik(yy,0,&loglik,RR0);
maxprt(RR1,f,g,cov,ret);

// form the vector RR1 back to the coefficient matrices 
{ coeff, A00, phai_1, phai_2 }= coemat(Rcoe,RR1);

print;
 "LHS transformation matrix" A00;
print;
"RHS coefficient matrix";
"AR_1" phai_1;
print;
"MA_1" phai_2;
print;

/*   Mean log-likelihood  6.6434174
Ry0[2,1]=1;
AR={ 1 1 , 0 0};
MA[1,1]=0.3;
LHS transformation matrix
       1.0000000       0.00000000 
     0.023905896        1.0000000 

RHS coefficient matrix
AR_1
      0.95292270      -0.64570252 
      0.00000000       0.00000000 

MA_1
      0.44139483       0.00000000 
      0.00000000       0.00000000 */



/***************** impulse responses analysis *******************/
vt=zeros(rows(yy),cols(yy));
i=maxlag+1;do while i<=rows(yy);
    vt[i,.]=yy[i,.]*A00'-(yy[i-1,.]~vt[i-1,.])*(phai_1~phai_2)';
i=i+1; endo;
vt=vt*(inv(A00)');
dof=rows(yy)-cols(xx);
vcvVARMA=(1/dof)*(vt'vt);              // var-cov matrix of residual 

tp=100;
phai_ar=inv(A00)*phai_1;
phai_ma=inv(A00)*phai_2*A00;
phai=phai_ar~phai_ma;
comp=phai|zeros(nv,cols(phai));

{ irf } = response(vcvVARMA,ARorder,MAorder,comp,tp);
// print irf;
// first two columns: responses of both variables to first shock

// to find the transformation matrix from ut to structural shocks et
csk=chol(vcvVARMA)';      // vt = csk * ut , ut has identity vcv matrix
/* csk:
     0.047370264       0.00000000 
     0.032986309     0.0098316734 */

// restriction: long-run neutrality --- edt has no long-run effect on output
f21=sumc(irf[.,2]);
f22=sumc(irf[.,4]);

// long-run restriction:  f21*a12 + f22*a22 = 0
theta=-f22/f21;
print theta;        // a12 = theta * a22        theta = 17.761691

// second restriction: ezt and edt are uncorrelated
// third restriction: variance of ezt and edt
vz=sigmaz^2;
vd=sigmad^2;
// solve for a11^2 first
sqa11=1/(vz*(1+theta^2));
a11_1=-sqrt(sqa11);
a11_2=-a11_1;
// then a12^2
sqa12=(1-vz*sqa11)/vd;
a12_1=-sqrt(sqa12);
a12_2=-a12_1;
// a21
a21_1=-theta*a11_1;
a21_2=-theta*a11_2;
// a22
a22_1=a12_1/theta;
a22_2=a12_2/theta;
tsf1=csk*((a11_1~a12_1)|(a21_1~a22_1));
tsf2=csk*((a11_2~a12_2)|(a21_2~a22_2));
print tsf1;
//      0.17991714        1.9706402 
//     -0.53796650        1.3952838 

// print tsf2;
// impulse responses of ( nt DlnYt )' to structural shocks ( ezt edt )'
// first two columns: responses of both variables to first shock

tp0=100;
{ s_irf } = s_response(vcvVARMA,ARorder,MAorder,comp,tp0,tsf1);
print;
print;
print "eigenvalues of the companion matrix";
eig(phai_ar);




/*************** confidence interval of impulse response ***************/
nsim=10000;
nzci=zeros(tp0+1,nsim);
ndci=zeros(tp0+1,nsim);
yzci=zeros(tp0+1,nsim);
ydci=zeros(tp0+1,nsim);

j=1; do while j<=nsim;

    seed=j;
    rndseed(seed);

    disz=sigmaz*rndn(rows(vt),1);
    disd=sigmad*rndn(rows(vt),1);
    dis=(disz~disd)*tsf1';      // new error terms
    dis=zeros(nobs-rows(dis),nv)|dis;

    yrdm=zeros(nobs,nv);
    yrdm[1:maxlag,.]=obsv[1:maxlag,.];

    i=maxlag+1; do while i<=rows(yrdm);
        yrdm[i,.]=yrdm[i-1,.]*phai_ar'+dis[i,.]+dis[i-1,.]*phai_ma';
    i=i+1; endo;

    yyrdm=trimr(yrdm,ARorder,0);

    if ARorder==1;
        xxrdm=trimr(yrdm,ARorder-1,1);
    else;
        xxrdm=trimr(yrdm,ARorder-1,1);
        i=2; do while i<=ARorder;
            xxrdm=xxrdm~trimr(yrdm,ARorder-i,i);
        i=i+1; endo;
    endif;

    yyrdm=yyrdm-meanc(yyrdm)';           // mean adjusted series
    xxrdm=xxrdm-meanc(xxrdm)';

    Ry0rdm=zeros(nv,nv);
    Ry0rdm[2,1]=1;

    A0rdm=eye(nv)+Ry0rdm;
    ARrdm={ 1 1 , 0 0};
    MArdm=zeros(nv,nv);
    MArdm[1,1]=0.3;

    Restrrdm=ARrdm~MArdm;

    // maximum logliklihood estimation
    Rcoerdm=Ry0rdm~Restrrdm;
    coerdm =Rcoerdm;
    RR0rdm=returnR0(Rcoerdm,Rcoerdm);
    {RR1rdm,frdm,grdm,covrdm,retrdm}=maxlik(yyrdm,0,&loglik,RR0rdm);
    maxprt(RR1rdm,frdm,grdm,covrdm,retrdm);

    // form the vector RR1rdm back to the coefficient matrices 
    { coeffrdm, A00rdm, phai_1rdm, phai_2rdm }= coemat(Rcoerdm,RR1rdm);

    vtrdm=zeros(rows(yyrdm),cols(yyrdm));
    i=maxlag+1;do while i<=rows(yyrdm);
        vtrdm[i,.]=yyrdm[i,.]*A00rdm'-(yyrdm[i-1,.]~vtrdm[i-1,.])*(phai_1rdm~phai_2rdm)';
    i=i+1; endo;
    vtrdm=vtrdm*(inv(A00rdm)');
    dof=rows(yyrdm)-cols(xxrdm);
    vcvVARMArdm=(1/dof)*(vtrdm'vtrdm);              @ var-cov matrix of residual @

    phai_arrdm=inv(A00rdm)*phai_1rdm;
    phai_mardm=inv(A00rdm)*phai_2rdm*A00rdm;
    phairdm=phai_arrdm~phai_mardm;
    check=eig(phai_arrdm);

    if abs(check)<=1;
        comprdm=phairdm|zeros(nv,cols(phairdm));
        { s_irfrdm } = s_response(vcvVARMArdm,ARorder,MAorder,comprdm,tp0,tsf1);
        nzci[.,j]=s_irfrdm[.,1];
        yzci[.,j]=s_irfrdm[.,2];
        ndci[.,j]=s_irfrdm[.,3];
        ydci[.,j]=s_irfrdm[.,4];
    endif;
    endif;

j=j+1; endo;

{ nzrsp }=interval(nzci);
{ ndrsp }=interval(ndci);




/*************** plot the impulse response functions ***************/
h0=seqa(0,1,tp0+1);
n_z=sumc(nzci')/nsim;  // s_irf[1:rows(h0),2];
n_d=sumc(ndci')/nsim;  // s_irf[1:rows(h0),4];

// cumulative effect on lnYt
yzrsp0=zeros(tp0+1,nsim);
ydrsp0=zeros(tp0+1,nsim);

i=1; do while i<=rows(yzrsp0);
    yzrsp0[i,.]=sumc(yzci[1:i,.])';
    ydrsp0[i,.]=sumc(ydci[1:i,.])';
i=i+1; endo;

{ yzrsp }=interval(yzrsp0);
{ ydrsp }=interval(ydrsp0);

y_z=sumc(yzrsp0')/nsim;
y_d=sumc(ydrsp0')/nsim;

/*
print Y_z~Y_d~N_z~N_d;
print "confidence interval of nt to a technology shock";
nzrsp~n_z;
print;
print;
print;
print "confidence interval of nt to a labor supply shock";
ndrsp~n_d;
print;
print;
print;
print "confidence interval of lnYt to a technology shock";
yzrsp~y_z;
print;
print;
print;
print "confidence interval of lnYt to a labor supply shock";
ydrsp~y_d;
*/

begwind;
window(2,2,0);
xsize=20;
ysize=20;
makewind(xsize,ysize,xsize/2,ysize/2,0);

_pcolor={12,12,9};
_pltype={4,4,6};
_plwidth={6,6,6};
_pmcolor={0,0,0,0,0,0,15,15,15};
_pcross=1;
_pnum=2;

setwind(1);
    title("response of lnYt to technology shock");
    xy(h0,yzrsp~Y_z);
nextwind;
    title("response of nt to technology shock");
    xy(h0,nzrsp~n_z);
nextwind;
    title("response of lnYt to labor supply shock");
    xy(h0,ydrsp~Y_d);
nextwind;
    title("response of nt to labor supply shock");
    xy(h0,ndrsp~n_d);
endwind;





proc interval(rdmci);
    local rspd0,rspd1,rspd2,j,rspd3,cv,rspd4,lb,ub,rspd;
rspd0=rdmci';
rspd1=delif(rspd0,(rspd0[.,2].==0).and(rspd0[.,3].==0));
rspd2=zeros(rows(rspd1),cols(rspd1));
for j(1,cols(rspd1),1);
    rspd3=sortc(rspd1,j);
    rspd2[.,j]=rspd3[.,j];
endfor;
cv=round(rows(rspd2)*0.025);
rspd4=trimr(rspd2,cv,cv);
lb=rspd4[1,.]';
ub=rspd4[rows(rspd4),.]';
rspd=lb~ub;
    retp (rspd);
endp;


proc s_response(vcv,ARorder,MAorder,a,length,tsf);
    local nv,ut,lag,resps,subresps,compes,i,j,irp;
nv = cols(vcv);
ut = tsf;
lag=ARorder+MAorder;
resps = zeros(lag*nv,length+1);
subresps = zeros(nv,length+1);
i=1; do while i <= nv;
    compes = zeros(lag*nv,1);
    compes[1:nv] = ut[.,i];
    compes[(ARorder*nv+1):((ARorder+1)*nv)] = ut[.,i];
    resps[.,1] = compes;
    j=1; do while j <= length;
        resps[.,j+1] = a*resps[.,j];
    j=j+1; endo;
    subresps = resps[1:nv,.];        
    if i == 1;
        irp = subresps;
    else;
        irp = irp|subresps;
    endif;
i=i+1; endo;
    retp(irp');
endp;


proc response(vcv,ARorder,MAorder,comp,length);
    local nv,ut,lag,resps,subresps,compes,i,j,irp;
nv = cols(vcv);
ut = chol(vcvVARMA)';
lag=ARorder+MAorder;
resps = zeros(lag*nv,length+1);
subresps = zeros(nv,length+1);
i=1; do while i <= nv;
    compes = zeros(lag*nv,1);
    compes[1:nv] = ut[.,i];
    compes[(ARorder*nv+1):((ARorder+1)*nv)] = ut[.,i];
    resps[.,1] = compes;
    j=1; do while j <= length;
        resps[.,j+1] = comp*resps[.,j];
    j=j+1; endo;
    subresps = resps[1:nv,.];        
    if i == 1;
        irp = subresps;
    else;
        irp = irp|subresps;
    endif;
i=i+1; endo;
    retp(irp');
endp;


proc (4) = coemat(Rcoe,R1);
local coe,i,j,k,A,phai_1,phai_2;
coe=Rcoe;
i=1; j=1; do while i<=rows(Rcoe);
    k=1; do while k<=cols(Rcoe);
        if Rcoe[i,k]/=0;
            coe[i,k]=R1[j,.];
            j=j+1;
        endif;
    k=k+1; endo;
i=i+1; endo;
A=coe[.,1:nv]+eye(nv);
phai_1=coe[.,(nv+1):2*nv];
phai_2=coe[.,(2*nv+1):3*nv];
retp (coe, A, phai_1, phai_2);
endp;


proc loglik(R1,y);
local nt,nv,u,sum,lnl,i,j,k,R0in,R1in,sigma;
nt=rows(y);
nv=cols(y);
u=zeros(nt,nv);
sum=zeros(nt-maxlag,1);
lnl=zeros(nt-maxlag,1);
/* form the column of the parameters to be estimated back to the coefficient matrix */
i=1; j=1; do while i<=nv;
    k=1; do while k<=cols(Rcoe);
		if Rcoe[i,k]/=0;
			coe[i,k]=R1[j,.];
			j=j+1;
		endif;
	k=k+1; endo;
i=i+1; endo;
R0in=eye(nv)+coe[1:nv,1:nv];
R1in=trimr(coe',nv,0)';
/* get the residual from estimating VARMA */
i=maxlag+1; do while i<=nt;
    u[i,.]=(R0in*y[i,.]')'-(R1in*(y[i-1,.]~u[i-1,.])')';    
i=i+1; endo;
u=trimr(u,maxlag,0);
sigma=u'u/(nt-maxlag);
i=1; do while i<=nt-maxlag;
	sum[i,.]=u[i,.]*invpd(sigma)*u[i,.]';
i=i+1; endo;
/* calculate the log-likelihood function */
lnl=ln(det(R0in))-0.5*ln(det(sigma))-0.5*sum;
retp(lnl);
endp;


proc returnR0(R,Rin);
local i,flag,R0in;
flag=1;
Rin=vecr(Rin);
R=vecr(R);
i=1; do while i<=rows(Rin);
	if Rin[i,.] /=0;
		flag=flag~R[i,.];
	endif;
i=i+1; endo;
R0in=trimr(flag',1,0);
retp(R0in);
endp;

